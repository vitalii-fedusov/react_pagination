{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","firstItemOnPage","lastItemOnPage","total","perPage","currentPage","onPageChange","pagesAmount","Math","ceil","pageArr","allItems","itemsOnPageArr","slice","className","cn","disabled","href","onClick","map","page","active","newPage","item","items","App","useState","setPerPage","setCurrentPage","length","min","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,kCCKIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,gBACAC,EAKI,EALJA,eACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAUhB,EAAW,EAAGa,GAExBI,EAAWjB,EAAW,EAAGS,GAEzBS,EACF,YAAID,GAAUE,MAAMZ,EAAkB,EAAGC,GAoB7C,OACE,qCACE,qBAAIY,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBX,IAA3C,SACE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EAAoB,OAAS,QAC5Ca,QArBU,WACE,IAAhBb,GACFC,EAAaD,EAAc,IAcvB,oBAUDK,EAAQS,KAAI,SAAAC,GAAI,OACf,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQhB,IAAgBe,IADvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,SAzCUI,EAyCYF,EAzCQ,WACpCf,IAAgBiB,GAClBhB,EAAagB,KAmCP,SAMGF,KAREA,GAnCM,IAACE,KA+ChB,oBAAIR,UAAWC,IAAG,YAAa,CAC7BC,SAAUX,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBE,EAAc,OAAS,QACtDW,QA5CU,WACdb,IAAgBE,GAClBD,EAAaD,EAAc,IAqCvB,uBAWJ,6BACGO,EAAeO,KAAI,SAAAI,GAAI,OACtB,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,YCtF5BC,EAAQ9B,EAAW,EAAG,IACzByB,KAAI,SAAArB,GAAC,qBAAYA,MAEP2B,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KAEMzB,EAAQqB,EAAMK,OAEd5B,EAAkB,EAAIG,GAAWC,EAAc,GAC/CH,EAAiBM,KAAKsB,IACzB1B,EAAUA,GAAWC,EAAc,GAAKF,GAQ3C,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCJ,EADjC,cACsDC,EADtD,eAC2EC,EAD3E,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO5B,EACP6B,SApBa,SAACC,GACtBP,GAAYO,EAAMC,OAAOH,OACzBJ,EAAe,IAaT,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,gBAAiBA,EACjBC,eAAgBA,EAChBC,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACgB,GAGb,OAFAM,EAAeN,GAER,UC5DjBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.164bcfee.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  firstItemOnPage: number,\n  lastItemOnPage: number,\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  firstItemOnPage,\n  lastItemOnPage,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const pageArr = getNumbers(1, pagesAmount);\n\n  const allItems = getNumbers(1, total);\n\n  const itemsOnPageArr\n    = [...allItems].slice(firstItemOnPage - 1, lastItemOnPage);\n\n  const eventHandler = (newPage: number) => () => {\n    if (currentPage !== newPage) {\n      onPageChange(newPage);\n    }\n  };\n\n  const prevHandler = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextHandler = () => {\n    if (currentPage !== pagesAmount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={prevHandler}\n          >\n            «\n          </a>\n        </li>\n        {pageArr.map(page => (\n          <li\n            className={cn('page-item', { active: currentPage === page })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={eventHandler(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item', {\n          disabled: currentPage === pagesAmount,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesAmount ? 'true' : 'false'}\n            onClick={nextHandler}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPageArr.map(item => (\n          <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n\n  const firstItemOnPage = 1 + perPage * (currentPage - 1);\n  const lastItemOnPage = Math.min(\n    (perPage + perPage * (currentPage - 1)), total,\n  );\n\n  const perPageHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={perPageHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        firstItemOnPage={firstItemOnPage}\n        lastItemOnPage={lastItemOnPage}\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(newPage) => {\n          setCurrentPage(newPage);\n\n          return {};\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}